<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.1.xsd" >

	<bean id="propertyConfigurer"
		  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" >
			<list>
				<value>classpath:app.properties</value>
			</list>
		</property>
	</bean>

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.poolMaxIdle}" />
		<property name="minIdle" value="${redis.poolMinIdle}" />
		<property name="maxTotal" value="${redis.poolMaxTotal}" />
		<property name="MaxWaitMillis" value="${redis.poolMaxWait}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
	</bean>

	<bean id="metadata1ConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		  p:host-name="${metadata1.redis.host}" p:port="${metadata1.redis.port}"
		  p:pool-config-ref="poolConfig"  p:database="${metadata1.redis.database}" p:timeout="${redis.timeout}" />
	<bean id="metadata1RedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="metadata1ConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
	</bean>
	<bean id="metadata1RedisCache" class="cn.situation.util.RedisCache">
		<property name="redisTemplate" ref="metadata1RedisTemplate"/>
	</bean>

	<bean id="metadata2ConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		  p:host-name="${metadata2.redis.host}" p:port="${metadata2.redis.port}"
		  p:pool-config-ref="poolConfig"  p:database="${metadata2.redis.database}" p:timeout="${redis.timeout}" />
	<bean id="metadata2RedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="metadata2ConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
	</bean>
	<bean id="metadata2RedisCache" class="cn.situation.util.RedisCache">
		<property name="redisTemplate" ref="metadata2RedisTemplate"/>
	</bean>

	<bean id="metadata3ConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		  p:host-name="${metadata3.redis.host}" p:port="${metadata3.redis.port}"
		  p:pool-config-ref="poolConfig"  p:database="${metadata3.redis.database}" p:timeout="${redis.timeout}" />
	<bean id="metadata3RedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="metadata3ConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
	</bean>
	<bean id="metadata3RedisCache" class="cn.situation.util.RedisCache">
		<property name="redisTemplate" ref="metadata3RedisTemplate"/>
	</bean>

	<bean id="event1ConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		  p:host-name="${event1.redis.host}" p:port="${event1.redis.port}"
		  p:pool-config-ref="poolConfig"  p:database="${event1.redis.database}" p:timeout="${redis.timeout}" />
	<bean id="event1RedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="event1ConnectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
	</bean>
	<bean id="event1RedisCache" class="cn.situation.util.RedisCache">
		<property name="redisTemplate" ref="event1RedisTemplate"/>
	</bean>

	<!--<bean id="event2ConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
		  <!--p:host-name="${event2.redis.host}" p:port="${event2.redis.port}"-->
		  <!--p:pool-config-ref="poolConfig"  p:database="${event2.redis.database}" p:timeout="0" />-->
	<!--<bean id="event2RedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">-->
		<!--<property name="connectionFactory" ref="event2ConnectionFactory" />-->
		<!--<property name="keySerializer">-->
			<!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
		<!--</property>-->
		<!--<property name="valueSerializer">-->
			<!--<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>-->
		<!--</property>-->
	<!--</bean>-->
	<!--<bean id="event2RedisCache" class="cn.situation.util.RedisCache">-->
		<!--<property name="redisTemplate" ref="event2RedisTemplate"/>-->
	<!--</bean>-->
</beans>