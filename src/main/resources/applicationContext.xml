<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<context:component-scan base-package="cn.situation.service" />

	<util:properties id="applicationProperties"
					 location="classpath:app.properties"
	/>

	<context:property-placeholder
			ignore-resource-not-found="true" properties-ref="applicationProperties" />
	<context:annotation-config />

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.poolMaxIdle}" />
		<property name="minIdle" value="${redis.poolMinIdle}" />
		<property name="maxTotal" value="${redis.poolMaxTotal}" />
		<property name="MaxWaitMillis" value="${redis.poolMaxWait}" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
	</bean>

	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		  p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.password}"
		  p:pool-config-ref="poolConfig"  p:database="${redis.database}" p:timeout="${redis.timeout}" />
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
	</bean>
	<bean id="redisCache" class="cn.situation.util.RedisCache">
		<property name="redisTemplate" ref="redisTemplate"/>
	</bean>

	<bean id="messageHandler"
		  class="cn.situation.service.impl.MessageHandlerImpl"
		  scope="prototype"
	/>

	<bean id="kafkaESConsumerManager" class="cn.situation.jobs.ConsumerManager" />
</beans>